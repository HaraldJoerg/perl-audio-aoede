#!/usr/bin/env perl
use 5.032;

# At the current state of maturity, this program is not intended to be
# installed.  I run it directly from the checkout.
use FindBin;
use lib "$FindBin::Bin/../lib";

use Getopt::Long;
use Audio::Aoede;
use Audio::Aoede::Envelope::ADSR;
use Audio::Aoede::Noise;
use Audio::Aoede::Note;
use Audio::Aoede::Units  qw( rate );
use Audio::Aoede::Voice;

my $color = 'white';
my $min_f = '20';
my $max_f = '22050';
my $duration = 1;

GetOptions("color=s"    => \$color,
           "min=i"      => \$min_f,
           "max=i"      => \$max_f,
           "duration=i" => \$duration)
    or die ("Error in command line arguments\n");

my $aoede = Audio::Aoede->new(player => 'sox');
my $noise = Audio::Aoede::Noise::colored(ucfirst $color,
                                         'Audio::Aoede::Noise',
                                         min_f => $min_f,
                                         max_f => $max_f);

my $rate      = rate();
my $n_samples = $duration * $rate;
# Add an envelope to quench audible glitches at the beginning or end
my $envelope = Audio::Aoede::Envelope::ADSR->new(
    attack => $rate/20,
    decay  => 0,
    sustain => 1,
    release => $rate/20);

my $carry;
my ($samples,$carry) = $envelope->apply($noise->samples($n_samples));

$aoede->write_samples($samples->append($carry));

__END__

=encoding utf8

=head1 NAME

noise - create sound which isn't music

=head1 SYNOPSIS

   $ noise --color=pink

...plays one second of pink noise.

=head1 DESCRIPTION

This program creates samples of noise with different spectra, called
the L<Colors of Noise|https://en.wikipedia.org/wiki/Colors_of_noise>
in Wikipedia.

=head1 OPTIONS

=over

=item B<--color>=C<white> | C<pink> | C<brown> | C<blue> | C<violet>

The "color" of noise.  Different colors have different frequency
spectra.  White noise (the default) has a flat frequency spectrum.

=item B<--duration>=I<number> (default: 1)

The duration in seconds.

=item B<--min_f>=I<number>, B<--max_f>=I<number>

Filter the noise so that only frequencies (in Hz) between C<min_f>
(default: 20) and C<max_f> (default: 20000) are generated.

=back

=head1 RESTRICTIONS

If the values of C<min_f> and C<max_f> are too close together, then
the "noise" will sound more like separate tones.  This is a
consequence of our algorithm: We are using I<discrete> Fourier
transformation, so when converting from a spectrum to samples we only
get discrete frequencies.

The "resolution" can be increased by taking more samples, but
well... this is not implemented.

=head1 AUTHOR

Harald Jörg, E<lt>haj@posteo.deE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright 2024 Harald Jörg

This program is free software; you may redistribute it and/or modify
it under the same terms as Perl itself.

=head1 SEE ALSO

=over

=item *

L<Playing with Pink Noise|https://www.youtube.com/watch?v=7UqV_5rVTNc>
- Kaki King.

=back
